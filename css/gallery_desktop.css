body {
    display: flex;
    justify-content: center;  /* 水平居中 */
    align-items: flex-start;  /* 从上方开始对齐 */
    min-height: 100vh;        /* 确保body占满整个视口 */
    margin: 0;                /* 移除默认外边距 */
    box-sizing: border-box;
	overflow-x: hidden;
    flex-wrap: wrap;          /* 允许子元素换行 */
}

li::marker {
	content: none;/* 移除标记符号 */
}

.gallery {
	max-width: 100vw;
	padding: 1rem;/* 内边距 */
	margin: 0;/* 外边距 */
	overflow-x: hidden;
	overflow-y: hidden;
	box-sizing: border-box;
}

.thumb {
	width: 500px;/* 固定宽度 */
	height: auto;/* 根据图像纵横比自动调整高度 */
	transition: transform 0.3s ease;
	margin: 10px 0; /* 上边下边 | 左边右边 */
	box-sizing: border-box; /* 防止溢出 */
}

.thumb img {
	width: 100%;
	height: 100%;
	object-fit: cover;/* 确保图像覆盖整个容器且不失真 */
	border: none;
	border-radius: 10px;
	filter: sepia(0.15) saturate(1.08) hue-rotate(-8deg) brightness(1.06);
	box-shadow: 0 0 10px 0 rgb(0 0 0 / 50%);
}

.thumb:hover {
	transform: scale(1.05);/* 悬停时有轻微缩放效果 */
}

.fixed-right {
    z-index: 10;
    position: fixed;
    right: 2rem;
    top: 60%;
    transform: translateY(-50%);
    color: #f2f2f2;
    padding: 0.5rem;
    background: rgba(0, 0, 0, 0.6);
    border-radius: 1rem;
    display: flex;
    flex-direction: column; /* 垂直方向排列子元素 */
    justify-content: center; /* 垂直居中子元素 */
    align-items: center; /* 水平居中子元素（但这里需要配合li的宽度设置） */
    height: auto; /* 或者设置一个具体的高度，如果希望容器有固定高度 */
    width: auto; /* 通常不需要设置宽度，因为fixed定位会根据内容自动调整 */
    max-width: calc(100% - 4rem); /* 可选：限制最大宽度，留出一些右侧空间 */
}
 
.fixed-right ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column; /* 垂直方向排列li元素（如果希望水平排列，则改为row） */
    align-items: center; /* 在水平方向上居中（但这里通常不需要，因为我们希望li垂直排列） */
    width: 100%; /* 让ul占据fixed-right的全部宽度 */
}
 
.fixed-right ul li {
    margin: 5px 0; /* 上下 | 左右 */
    padding: 10px;
    cursor: pointer;
    border-radius: 0.5rem;
    text-align: center; /* 让li内的内容水平居中 */
}

.fixed-right ul li.menu-top {
	display: none;
}

.icon {
	width: 1em;
	height: 1em;
	vertical-align: middle;
	fill: currentColor;
	overflow: hidden;
	font-size: 3rem;
}

#nav {
	display: block;
	width: 100%;
	max-width: 100vw;
	padding: 0;/* 内边距 */
	margin: 0;/* 外边距 */
	overflow-x: hidden;
	overflow-y: hidden;
	box-sizing: border-box;
}

.nav-previous,
.nav-next {
	display: flex;
	align-items: center;
	font-size: 1rem;
	width: 100%;
}

.nav-previous {
	justify-content: flex-start;/* 左对齐 */
}

.nav-next {
	justify-content: flex-end;/* 右对齐 */
}

.nav-previous svg,
.nav-next svg {
	width: 24px;
	height: 24px;
	fill: #007bff;
	margin-right: 8px;
	transition: transform 0.3s ease;
}

.nav-previous:hover svg {
	transform: translateX(-5px);
}

.nav-next:hover svg {
	transform: translateX(5px);
}

.nav-previous .prev a,
.nav-next .next a {
	font-size: 24px;
	text-decoration: none;
	color: #007bff;
	font-weight: bold;
	transition: color 0.3s ease;
}

.nav-previous .prev a:hover,
.nav-next .next a:hover {
	color: #0056b3;
}

.pagination {
	list-style: none;
	/* 移除默认的列表样式 */
	padding: 5rem 0;
	/* 移除默认的内边距 */
	margin: 0 auto;
	/* 移除默认的外边距并水平居中 */
	display: flex;
	/* 使用Flexbox布局 */
	flex-wrap: wrap;
	/* 允许子元素换行 */
	justify-content: center;
	/* 水平居中 */
	align-items: center;
	/* 垂直居中（对于单行时更美观） */
	gap: 1rem;
	/* 按钮之间的间距 */
}

/* 分页按钮的样式 */
.pagination a {
	display: block;
	/* 将链接转换为块级元素 */
	width: 7.5rem;
	/* 宽度 */
	height: 5rem;
	/* 高度 */
	line-height: 5rem;
	/* 行高与高度相同，以确保文字垂直居中 */
	padding: 0;
	/* 移除内边距，因为我们已经设置了固定的高度和行高 */
	font-size: 3rem;
	/* 文字大小 */
	color: #333;
	/* 文字颜色 */
	text-decoration: none;
	/* 移除下划线 */
	text-align: center;
	/* 文字居中 */
	background-color: #f0f0f0;
	/* 背景颜色 */
	border-radius: 0.25rem;
	/* 圆角 */
	transition: background-color 0.3s ease, color 0.3s ease;
	/* 平滑的过渡效果 */
	box-sizing: border-box;
	/* 包括边框和内边距在内计算元素的总宽度和高度 */
}

/* 鼠标悬停时的样式 */
.pagination a:hover {
	background-color: #ddd;
	/* 背景颜色变深 */
	color: #000;
	/* 文字颜色变深 */
}

/* 当前页的样式 */
.pagination a.current {
	background-color: #007bff;
	/* 背景颜色变为蓝色 */
	color: #fff;
	/* 文字颜色变为白色 */
	cursor: default;
	/* 禁用点击手型光标 */
	pointer-events: none;
	/* 禁止点击事件 */
}

/* waterfall样式1 */
/* .waterfall {
	width: 80%;
	column-gap: 10px;
	column-count: 4;
	margin: 0 auto;
}

.item {
	padding: 10px;
	margin-bottom: 10px;
	break-inside: avoid;
	border: 1px solid #000;
} */


/* waterfall样式2 */
/* .waterfall {
    column-count: 3;
    column-gap: 15px;
}
.item {
	display: inline-block;
	break-inside: avoid;
} */


/* waterfall响应式设计 自动列数 */
/* @media (min-width: 992px) and (max-width: 1300px) {
	.waterfall {
		column-count: 3;
	}
}

@media (min-width: 768px) and (max-width: 991px) {
	.waterfall {
		column-count: 2;
	}
} */

@media (max-width: 767px) {

	/* .waterfall {
		column-count: 1;
		width: 95%
	} */
	#nav {
		flex-direction: column;
		align-items: flex-start;
	}

	.nav-previous,
	.nav-next {
		margin: 8px 0;
	}
}